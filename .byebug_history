continue
added_users.empty?
added_users
removed_users
User.find_by(id: removed_users[0][:user_id]).fullname
added_users
continue
User.find_by(id: added_users[1][:user_id]).fullname
User.find_by(id: added_users[0][:user_id]).fullname
added_users
continue
User.find_by(id: removed_users[0][:user_id]).fullname
User.find_by(id: added_users[0][:user_id]).fullname
User.find_by(id: added_users[0][:user_id])
removed_users
added_users
continue
removed_users
added_users
continue
removed_users
added_users
continue
removed_users
added_users
continue
removed_users
added_users
continue
User.find_by(id: added_users[0][:user_id])
added_users[0][:user_id]
added_users[0]
removed_users
added_users
continue
nested_attributes.keys.length
minute_attendees_after.length
@minute_attendees_before.
minute_attendees_after
@minute_attendees_before
continue
@minute_attendees_before
minute_attendees_after
@minute.previous_changes
m.previous_changes
m=minute_attendees_after
m=minute_attendees_after.length
minute_attendees_after.length
@minute_attendees_before.length
minute_attendees_after
@minute_attendees_before.length
@minute_attendees_before
continue
minutes_users.length
@minute_attendees
@minutes_attendees
continue
minutes_users.length
nested_attributes.keys.length
nested_attributes
continue
nested
@minute.minutes_users.length
nested.keys.length
nested=params[:minute][:minutes_users_attributes]
nested.keys.length
continue
nested.values
nested.keys
@minute.minutes_users.length
nested.keys.length
@minute.minutes_users.length
@minute.minutes_users.legth
@minute.minutes_users
nested.keys.length
nested.count
nested.length
nested.size
nested=params[:minute][:minutes_users_attributes]
continue
n
n[1]
n[0]
n.length
n.size
n=params[:minute][:minutes_users_attributes]
params[:minute][:minutes_users_attributes]
params[:minute][:minutes_users_attribute]
changes
continue
next
destroy_value
continue
attributes
index
continue
phone.empty?
fullname.empty?
fullname.nil?
fullname?
fullname
!fullname
@em_contact.empty?
@em_contact.nil?
@em_contact
continue
em_contact_changes
continue
next
continue
next
changes_description
continue
validate_emergency_contact_data(count)
continue
validate_emergency_contact_data(1)
description
em_contact_changes
continue
em_contact_changes
continue
next
description
next
description
continue
description
continue
description
continue
description
continue
changes
exit
exut
continue
next
continue
values
attribute
next
attribute
old_value.to_s
old_value.class.name
new_value
old_value
continue
description
continue
description.empty?
description
continue
description
continue
@user.valid?
continue
@user.valid?
continue
@user.errors
@user.valid?
continue
@user.valid?
continue
next
continue
errors
next
continue
nested_attributes.map
phase_ids = nested_attributes.map { |index, attributes| attributes["phase_id"] }
nested_attributes
continue
next
total_hours
continue
params[:activity][:phases_activities_attributes]
total_hours
continue
params
continue
params[:minute][:minutes_users_attributes]
params
@minute.minutes_users
continue
@minute.minutes_users
@minute.valid?
continue
@activity.errors.full_messages
@activity.valid?
continue
@activity
@activity.save
@activity.valid?
params
continue
p.code
p
p=Phase.find_by(name: "Muros de Contención M")
Phase.find_by(name: "Muros de Contención M")
@phases.find_by(id: 77)
@phases.find_by(id: 1)
@phases
@phase
continue
next
continue
next
exit
continue
next
@activity.nested_phases
continue
validate_nested_phases
next
validate_nested_phases
validate_nested_params
continue
params[:activity][:phase_ids].reject(&:blank?).blank?
continue
params[:activity][:phase_ids].reject(&:blank?).blank?
continue
params[:activity][:phase_ids].reject(&:blank?).blank?
params[:activity][:phase_ids]
continue
params[:activity][:phase_ids]
params[:activity][:phase_ids].reject(&:blank?).blank?
continue
params[:activity][:phase_ids].reject(&:blank?).blank?
params[:activity][:phase_ids].reject(&:blank?)
params[:activity][:phase_ids]
params[:activity][:phase_ids].nil?
params[:activity][:phase_ids].blank?
continue
params[:activity][:phase_ids].blank?
params
continue
params[:activity][:phase_ids].blank?
params[:activity][:phase_ids]
params
params[:phase_ids]
@activity
continue
@activity.phase_ids.blank?
@activity.phase_ids.nil?
@activity.phase_ids
@activity.phases
@activity
exit
@activity.valid?
next
continue
@activity.valid?
next
params
continue
params
