continue
new_hours.to_s
previous_hours.to_s
continue
previous_hours.to_s
new_hours.to_s
continue
previous_hours.to_s
new_hours.to_s
continue
new_hours.to_s
previous_hours.to_s
continue
new_hours.to_s
previous_hours.to_s
continue
new_hours.to_s
previous_hours.to_s
continue
previous_hours.to_s
new_hours.to_s
continue
previous_hours.to_s
new_hours.to_s
continue
!phases_activities.find_by(phase_id: attributes["phase_id"].to_i).nil?
attributes["phase_id"].to_i
phases_activities.find_by(phase_id: attributes["phase_id"].to_i).nil?
phases_activities.find_by(phase_id: attributes["phase_id"]).nil?
attributes["_destroy"] == "false"
attributes["phase_id"]
phases_activities.first
attributes["_destroy"]
exit
attributes
attributes["_destroy"]
attribute["__destroy"]
phases_activities.first
previous_hours.to_s
new_hours.to_s
exit
previous_hours.to_s
new_hours.to_s
exit
nested_attributes
phases_activities
previous_hours.to_s
new_hours.to_s
continue
previous_hours.to_s
new_hours.to_s
exit
phases_activities
previous_hours.to_s
new_hours.to_s
new_hours.to_S
exit
new_hours.to_s
new_hours
continue
exit
params[:activity][:phases_activities_attributes]
non_deleted_phases_activities
exit
attributes
exit
previous_hours.to_s
previous_hours + new_hours > 24
new_hours.to_s
exit
new_hours.to_s
new_phases_activities
exit
new_hours.to_s
new_phases_activities
exit
new_phases_activities
exit
continue
new_phases_activities
exit
new_phases_activities
continue
params[:activity][:phases_activities_attributes]
@activity.phases_activities.size
@activity.phases_activities.first.hours.to_s
@activity.phases_activities
params
new_hours.to_s
previous_hours.to_s
previous_hours + new_hours > 24
continue
previous_hours + new_hours > 24
continue
previous_hours.to_s
previous_hours
new_hours.to_s
previous_hours + new_hours > 24
continue
new_hours.to_s
previous_hours.to_s
continue
new_hours.to_s
previous_hours.to_s
previous_hours
previous_hours + new_hours > 24
exit
previous_hours + new_hours > 24
previous_hours
new_hours
total_hours
exit
total_hours
exit
@activity.get_total_hours
@activity.phases_activities
@activity
 activities.first.get_total_hours
 activities
continue
activities_grouped_by_project
continue
group_phase_by_count
continue
phases_activitites_grouped_by_project
continue
activities_grouped_by_project
continue
@user
continue
@attendees
continue
@attendees.first
@attendees
continue
emails
continue
@minute.minutes_users
continue
@minute
continue
UserMailer.send_status_changed_email(@user).deliver_later
continue
UserMailer.send_status_changed_email(@user).deliver_now
continue
UserMailer.send_status_changed_email(@user).deliver_now
continue
UserMailer.send_status_changed_email(@user).deliver_now
continue
UserMailer.send_status_changed_email(@user)
continue
cotninue
UserMailer.send_status_changed_email(@user)
continue
@user
continue
@@new_status
@@new_role
continue
@@new_role
@@new_rol
@@new_status
continue
new_value
old_value
continue
@user.status_changed?
continue
params
user
continue
params
user
exit
params
continue
phases_activities_sum_by_project
phases_activities_count_by_project
continue
phases_activities_count_by_project
continue
activities_grouped_by_project
continue
activities_grouped_by_project
continue
phases_activities_count
continue
activities.size
activities
continue
activities.first.phases_activities.size
activities.first.phases_activities
activities
continue
activities
continue
activities_sum_by_project
continue
phases_activities_grouped_by_project
continue
alert
continue
start_date > end_date
end_date
start_date
continue
table_width
continue
pdf.bounds.width 
pdf.bounds.with 
pdf
continue
CONTINUE
table_data
continue
active_collaborators.first.job_position
active_collaborators.first.position
active_collaborators.first.id_card
active_collaborators.first.fullname
active_collaborators
continue
total_report_hours
continue
hours
continue
next
hours
continue
activities = collaborator.activities.where(date: start_date..end_date).order(date: :asc)
activities
continue
phases_activities_grouped_by_phase
continue
continye
continue
phases_activities_grouped_by_phase
continue
params
continue
params
continue
next
continue
collaborator.nil?
continue
params
collaborator.nil?
continue
collaborator_report_type
continue
report_type
continue
report_type
continue
report_type
continue
