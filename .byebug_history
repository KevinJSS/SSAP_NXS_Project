continue
em_contact_changes
continue
next
continue
next
changes_description
continue
validate_emergency_contact_data(count)
continue
validate_emergency_contact_data(1)
description
em_contact_changes
continue
em_contact_changes
continue
next
description
next
description
continue
description
continue
description
continue
description
continue
changes
exit
exut
continue
next
continue
values
attribute
next
attribute
old_value.to_s
old_value.class.name
new_value
old_value
continue
description
continue
description.empty?
description
continue
description
continue
@user.valid?
continue
@user.valid?
continue
@user.errors
@user.valid?
continue
@user.valid?
continue
next
continue
errors
next
continue
nested_attributes.map
phase_ids = nested_attributes.map { |index, attributes| attributes["phase_id"] }
nested_attributes
continue
next
total_hours
continue
params[:activity][:phases_activities_attributes]
total_hours
continue
params
continue
params[:minute][:minutes_users_attributes]
params
@minute.minutes_users
continue
@minute.minutes_users
@minute.valid?
continue
@activity.errors.full_messages
@activity.valid?
continue
@activity
@activity.save
@activity.valid?
params
continue
p.code
p
p=Phase.find_by(name: "Muros de Contención M")
Phase.find_by(name: "Muros de Contención M")
@phases.find_by(id: 77)
@phases.find_by(id: 1)
@phases
@phase
continue
next
continue
next
exit
continue
next
@activity.nested_phases
continue
validate_nested_phases
next
validate_nested_phases
validate_nested_params
continue
params[:activity][:phase_ids].reject(&:blank?).blank?
continue
params[:activity][:phase_ids].reject(&:blank?).blank?
continue
params[:activity][:phase_ids].reject(&:blank?).blank?
params[:activity][:phase_ids]
continue
params[:activity][:phase_ids]
params[:activity][:phase_ids].reject(&:blank?).blank?
continue
params[:activity][:phase_ids].reject(&:blank?).blank?
params[:activity][:phase_ids].reject(&:blank?)
params[:activity][:phase_ids]
params[:activity][:phase_ids].nil?
params[:activity][:phase_ids].blank?
continue
params[:activity][:phase_ids].blank?
params
continue
params[:activity][:phase_ids].blank?
params[:activity][:phase_ids]
params
params[:phase_ids]
@activity
continue
@activity.phase_ids.blank?
@activity.phase_ids.nil?
@activity.phase_ids
@activity.phases
@activity
exit
@activity.valid?
next
continue
@activity.valid?
next
params
continue
params
continue
params
parans
exit
p.activities.count
p.activities
p=Phase.first
exit
p.activities
p=Phase.first
continue
@user.errors.full_messages
@user.valid?
next
params
exit
@user.errors.full_messages
@user.valid?
next
@user.errors.full_messages
@user.valid?
@user.errors.full_messages
next
continue
@user.errors.full_messages
@user.errors.messages
@user.valid?
next
params
exit
continue
params
continue
params
continue
@user.valid?
next
@user.errors.full_messages
@user.valid?
@user.save
@user
continue
params
continue
params
continue
@role_param
continue
@user
continue
params
continue
params
continue
params[:role]
@user
params
continue
params
@role_param
@user
continue
@role_param
continue
@role_param
continue
@role_param
continue
:role
@role
role
continue
Date.today
date > Date.today
date
date.present?
continue
activities
continue
project.has_associated_minutes_and_activities?
project.has_associated_minutes_and_activities
project
continue
@associations
associations
continue
associations
continue
@stage
continue
next
continue
stage_options
continue
exit
continue
project.stage
continue
@stage
stage[1].to_s
exit
continue
previous
@stage
continue
