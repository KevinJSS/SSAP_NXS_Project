continue
activities_grouped_by_project
continue
group_phase_by_count
continue
phases_activitites_grouped_by_project
continue
activities_grouped_by_project
continue
@user
continue
@attendees
continue
@attendees.first
@attendees
continue
emails
continue
@minute.minutes_users
continue
@minute
continue
UserMailer.send_status_changed_email(@user).deliver_later
continue
UserMailer.send_status_changed_email(@user).deliver_now
continue
UserMailer.send_status_changed_email(@user).deliver_now
continue
UserMailer.send_status_changed_email(@user).deliver_now
continue
UserMailer.send_status_changed_email(@user)
continue
cotninue
UserMailer.send_status_changed_email(@user)
continue
@user
continue
@@new_status
@@new_role
continue
@@new_role
@@new_rol
@@new_status
continue
new_value
old_value
continue
@user.status_changed?
continue
params
user
continue
params
user
exit
params
continue
phases_activities_sum_by_project
phases_activities_count_by_project
continue
phases_activities_count_by_project
continue
activities_grouped_by_project
continue
activities_grouped_by_project
continue
phases_activities_count
continue
activities.size
activities
continue
activities.first.phases_activities.size
activities.first.phases_activities
activities
continue
activities
continue
activities_sum_by_project
continue
phases_activities_grouped_by_project
continue
alert
continue
start_date > end_date
end_date
start_date
continue
table_width
continue
pdf.bounds.width 
pdf.bounds.with 
pdf
continue
CONTINUE
table_data
continue
active_collaborators.first.job_position
active_collaborators.first.position
active_collaborators.first.id_card
active_collaborators.first.fullname
active_collaborators
continue
total_report_hours
continue
hours
continue
next
hours
continue
activities = collaborator.activities.where(date: start_date..end_date).order(date: :asc)
activities
continue
phases_activities_grouped_by_phase
continue
continye
continue
phases_activities_grouped_by_phase
continue
params
continue
params
continue
next
continue
collaborator.nil?
continue
params
collaborator.nil?
continue
collaborator_report_type
continue
report_type
continue
report_type
continue
report_type
continue
@activities
continue
Activity.where(user_id: collaborator.id)
Activity.all
collaborator
collaborator.activities
@activitities
continue
@total_hours
continue
start_date.empty?
start_date.nil?
params
continue
params
continue
params
continue
params[:id]
params
continue
@minute.meeting_objectives.body.to_plain_text.gsub(/^\d+\.\s/, '')
@minute.meeting_objectives.body.to_plain_text.gsub(/^\d+\.\s, '')
@minute.meeting_objectives.body.to_plain_text.gsub(/^\d+\.\s\n, '')
@minute.meeting_objectives.body.to_plain_text.gsub(/^\d+\.\s/\n, '')
@minute.meeting_objectives.body.to_plain_text
@minute.meeting_objectives.body.to_plain_text.gsub(/^\d+\.\s/, '')
continue
@minute.meeting_objectives.to_plain_text
@minute.meeting_objectives
@minute.meeting_objetives
continue
@minute.meeting_date
"Fecha de la reuni√≥n: #{sanitize(@minute.meeting_date)}"
@minute
continue
temp
continue
temp
continue
temp
continue
removed_objectives
added_objectives
added_objetives
continue
@minute.meeting_objectives.previous_changes
changes
continue
@minute.previous_changes
continue
@minute.previous_changes
@minute.meeting_objectives.previous_changes
changes
continue
removed_objectives
removed_objetives
added_objectives
added_objetives
continue
old_value
continue
old_value
continue
previous_changes
previous_changes['body'][0]
previous_changes['body']
previous_changes[body]
previous_changes.body
previous_changes
continue
previous_changes.previous_changes
previous_changes
continue
@minute.attribute_changed?(:meeting_objectives)
continue
@minute.attribute_changed?(:meeting_objectives)
continue
meeting_objectives
continue
meeting_objectives
stripped_content
raw_html
continue
raw_html
continue
raw_html
continue
raw_html
continue
striped_tags(params[:minute][:meeting_objectives])
params[:minute][:meeting_objectives]
continue
@q.result.any?
@activities.empty?
@activities
continue
params[:q][:phase]
User.find_by(id: @a[0].user_id)
@a[0].phases_activities
@a[0]
@a = Activity.all
continue
temp = Activity.joins(:phases_activities).where(phases_activities: {phase_id: params[:q][:phase]})
continue
params[:q]
continue
@p
continue
exit
end_date
start_date
continue
end_date
start_date
start_Date
continue
exit
end_date
